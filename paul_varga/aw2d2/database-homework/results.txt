1. Selects the names of all products that are not on sale.
sqlite> select name from products where on_sale is not 't';
Teddy Bear
Cat Ears
Card Against Humanity
Set of 12 Mason Jars

2. Selects the names of all products that cost less than £20.
sqlite> select name from  products where price < 20;
Teddy Bear
The Ruby Programming Language
Silicon Valley Monopoly
Set of 12 Mason Jars

3. Selects the name and price of the most expensive product.
sqlite> select name,price from products where price = (select max(price) from products);
Cat Ears|99.99

4. Selects the name and price of the second most expensive product.
sqlite> select name,max(price) from products where price < (select max(price) from products);
Brown Leather Boots|82.0

5. Selects the name and price of the least expensive product.
sqlite> select name,price from products where price = (select min(price) from products);
Set of 12 Mason Jars|6.22

6. Selects the names and prices of all products, ordered by price in descending order.
sqlite> select name,price from products where price ordered by desc;
Error: near "ordered": syntax error
sqlite> select name,price from products order by price desc;
Cat Ears|99.99
Brown Leather Boots|82.0
Lonely Pillow|78.82
Card Against Humanity|25.0
Hoodie|25.0
Set of silverware|22.99
The Ruby Programming Language|19.99
Teddy Bear|17.99
Silicon Valley Monopoly|10.99
Set of 12 Mason Jars|6.22

7. Selects the average price of all products.
sqlite> select avg(price) from products;
38.899

8. Selects the sum of the price of all products.
sqlite> select sum(price) from products;
388.99

9. Selects the sum of the price of all products whose prices is less than £20.
sqlite> select sum(price) from products where price < 20;
55.19

10. Selects the id of the user with your name.
sqlite> select id from users where name = 'Paul Varga';
10

11. Selects the names of all users whose names start with the letter "S".
sqlite> select name from users where name like 'S%';
Sam Hill
Scott Gammon

12. Selects the number of users whose first names are "Jonathan".
sqlite> select count(*) names from  users where name like 'Jonathan%';
2

13. Selects the number of users who want a "Teddy Bear".
sqlite> select count(*) from wishlists join products on products.id = wishlists.product_id  where products.name = 'Teddy Bear';
6

14. Selects the count of items on the wishlish of the user with your name.
sqlite> select count(*) from wishlists join users on users.id = wishlists.user_id where users.name = 'Paul Varga';
5

15. Selects the count and name of all products on the wishlist, ordered by count in descending order. (NOTE: Needed help and could not translate it into 16.)
sqlite> select name,count(*) AS products_count from products where products.id In (select product_id from wishlists) group by name order by products_count desc;
Brown Leather Boots|1
Card Against Humanity|1
Cat Ears|1
Hoodie|1
Lonely Pillow|1
Set of 12 Mason Jars|1
Silicon Valley Monopoly|1
Teddy Bear|1
The Ruby Programming Language|1
sqlite>


16. Selects the count and name of all products that are not on sale on the wishlist, ordered by count in descending order.
???

17. Inserts a user with the name "Jonathan Anderson" into the users table. Ensure the created_at column is set to the current time.
insert into users (created_at, name) values (datetime(CURRENT_TIMESTAMP,'localtime'), 'Jonathan Anderson');

18. Selects the id of the user with the name "Jonathan Anderson"?  Ensure the created_at column is set to the current time.
sqlite> select id from users where name = 'Jonathan Anderson';
25

19. Inserts a wishlist entry for the user with the name "Jonathan Anderson" for the product "The Ruby Programming Language".
insert into wishlists (user_id, product_id) values(25, 4);

20. Updates the name of the "Jonathan Anderson" user to be "Jon Anderson".
update users set name ='Jon Anderson' where id=25;

21. Deletes the user with the name "Jon Anderson".
delete from users where name ='Jon Anderson';

22. Deletes the wishlist item for the user you just deleted.
delete from wishlists where user_id='25';
